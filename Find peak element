//find peak element in the given array/vector using binary search
//check for elements in both sides to chec if portion is increasing or decreasing 
//none of the element is increasing

#include<bits/stdc++.h>
using namespace std;

int peak(vector<int> v,int n)
{
    int low=0,heigh=n-1;
    int mid=low+(heigh-low)/2;
    int t=0;
    if(n>1)
    {
      while(t!=1)
      {
          if(mid==0)
          {
            if(v[mid]>v[mid+1])
            {
                return v[mid];
            }
            else
            {
              return v[mid+1];   
            }
          }
          else if(mid==n-1)
          {
              if(v[mid]>v[mid-1])
              {
                  return v[mid];
              }
              else
              {
                  return v[mid-1];
              }
          }
          else
          {
              if(v[mid]>v[mid+1] && v[mid]>v[mid-1])
              {
                  return v[mid];
              }
              else
              {
                  if(v[mid]>v[mid+1])
                  {
                      heigh=mid-1;
                  }
                  else if(v[mid]<v[mid+1])
                  {
                      low=mid+1;
                  }
                  
              }
          }
      }
    }
    else
    {
        return v[0];
    }
    
    
}

int main()
{
    vector<int> v;
    int n;
    cin>>n;
    
    for(int i=0;i<n;i++)
    {
        int x;
        cin>>x;
        v.push_back(x);
    }
    
    int t=peak(v,n);
    
    cout<<t;
    
    return 0;
    
}
