//concept similar to painter partetioning and book allotment
//h is returned at end as minimum distance between any two of them is the maximum possible.

class Solution {
public:

    int solve(int n, int k, vector<int> &stalls) {
    
        // Write your code here
        vector<int> v=stalls;
        sort(v.begin(),v.end());
        
        int l=0,r=(v[v.size()-1]-v[0]);
        int mid;
        
        while(l<=r)
        {
            mid=(l+r)/2;
            int p=v[0];
            int c=1;
            
            for(int i=1;i<v.size();i++)
            {
               if(v[i]-p>=mid)
               { 
                  p=v[i];
                  c++;
               }
            }
            
            
            if(c>=k)
            {
                l=mid+1;
            }
            else
            {
                r=mid-1;
            }
        }
        
        
        return  r;
        
    }
};
